apiVersion: apps/v1
kind: Deployment
metadata:
  name: service_name
  labels:
    app: service_name
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service_name
  template:
    metadata:
      labels:
        app: service_name
    spec:
      volumes:
        - name: workspace-volume
          emptyDir: {}
      initContainers:
        - name: copy-s3-resources
          image: amazon/aws-cli
          command: ["/bin/sh", "-c"]
          args:
            - >
              aws s3 cp s3://madhav.dev.intervue/code/service_name /workspace/ --recursive &&
              echo "Resources copied from S3";
          env:
            - name: AWS_ACCESS_KEY_ID
              value: "AKIAXYKJQWSEZNY6XHZX"
            - name: AWS_SECRET_ACCESS_KEY
              value: "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"
          volumeMounts:
            - name: workspace-volume
              mountPath: /workspace
      containers:
        - name: runner
          image: maddy020/runner:latest
          ports:
            - containerPort: 3005
          volumeMounts:
            - name: workspace-volume
              mountPath: /workspace

---
apiVersion: v1
kind: Service
metadata:
  name: service_name
spec:
  selector:
    app: service_name
  ports:
    - protocol: TCP
      name: ws
      port: 3005
      targetPort: 3005
      nodePort: 30080
  type: NodePort
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: service_name
# spec:
#   ingressClassName: nginx
#   rules:
#     - host: http://localhost:4002
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: service_name
#                 port:
#                   number: 300
#     - host: http://localhost:4001
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: service_name
#                 port:
#                   number: 3000
